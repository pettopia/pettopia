<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/websocket
http://www.springframework.org/schema/websocket/spring-websocket.xsd">


	<context:component-scan
		base-package="org.springframework.samples.petclinic.web" />
	<context:component-scan
		base-package="com.pettopia.*" />

	<!-- ※ 『dispatcher-servlet』의 기본 샘플 코드 -->
	<!-- 이 코드는 기본 설정 내용을 복사하기 위해서 스프링 doc 를 참고하여 작성한다. -->
	<!-- → 『C:\spring-3.0.2-with-docs\docs\spring-framework-reference\pdf』 경로로 
		이동 -->
	<!-- → 『spring-framework-reference.pdf』 파일 열기(실행) -->
	<!-- → 문서 본문 내용의 425 페이지(직접 이동 450 / 805)로 이동 -->
	<!-- → 페이지 하단의 XML 파일 샘플코드 복사 & 붙여넣기 -->


	<!-- ① 기존 코드 -->
	<!-- ※ Annotation 표기법으로 Controller 객체를 등록한다. -->
	<context:component-scan
		base-package="com.pettopia.jw"></context:component-scan>
	<context:component-scan
		base-package="com.pettopia.bk"></context:component-scan>
	<context:component-scan
		base-package="com.pettopia.uj"></context:component-scan>
	<context:component-scan
		base-package="com.pettopia.mh"></context:component-scan>
	<context:component-scan
		base-package="com.pettopia.hj"></context:component-scan>

	<!-- ③ mybatis 등록 과정에서 생겨나는 추가 코드 『2』 -->
	<!-- ※ mybatis 를 사용하기 위해 환경 설정을 추가하는 과정에서 -->
	<!-- 필요한 dataSource 를 사용하기 위한 환경 설정 추가 -->

	<!-- 우리는 이 코드 -->
	<bean id="remoteDataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@34.64.254.210:1521:xe"></property>
		<property name="username" value="pettopia"></property>
		<property name="password" value="thor"></property>
	</bean>


	<!-- ② mybatis 등록 과정에서 생겨나는 추가 코드 『1』 -->
	<!-- ※ mybatis 를 사용하기 위한 환경 설정 추가 -->
	<!-- → SqlSessionFactoryBean 등록 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">

		<!-- dataSource 를 프로퍼티로 추가하기 위해서 ③ 코드를 추가해야 한다. -->
		<!-- ④ dataSource 를 등록하고 와서 다시 추가 -->
		<property name="dataSource" ref="remoteDataSource"></property>


		<!-- ⑤ 매퍼 파일을 작성하고 와서 다시 추가 -->
		<!-- sql 구문들을 XML 형식으로 분리하게 되는데, 어떤 XML 에 담아뒀는지 정보를 줘야한다. -->
		<property name="mapperLocations"
			value="classpath:com/pettopia/mapper/*.xml"></property>

	</bean>



	<!-- 위 과정은 SqlSession 을 얻어내기 위해 만든 FactoryBean -->
	<!-- → SqlSession 을 얻어내는 bean -->

	<!-- ⑥ mybatis 등록 과정에서 생겨나는 추가 코드 『3』 -->
	<!-- ※ sqlSession 을 사용하기 위한 환경 설정 추가 -->
	<!-- → SqlSessionTemplate 등록 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	
	<!-- 브라우저가 multipart/form-data 데이터로 보내는 
	파일을 처리하기 위한 MultipartResolver 클래스를 bean으로 등록 -->
	


</beans>

