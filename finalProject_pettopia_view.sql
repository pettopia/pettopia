ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH:MI:SS';

----------------------------------------------------------------------------------------
-- AdminMain.jsp
--●●●●●● 관리자메인 - 신규회원가입 목록


--● 총 회원수(totMember)
SELECT COUNT(*) AS COUNT
FROM MEMBER_REG;

--● 오늘 신규가입 회원수(todayNewMember)
SELECT COUNT(*) AS COUNT
FROM MEMBER_CODE
WHERE REGDATE=TO_DATE(SYSDATE, 'YYYY-MM-DD');

--● 오늘 탈퇴한 회원수(todayWithdrawMember)
SELECT COUNT(*) AS COUNT
FROM MEMBER_WITHDRAW
WHERE WITHDRAW_DATE=TO_DATE(SYSDATE, 'YYYY-MM-DD');

--● 신규 가입회원 목록 뷰 생성
-- 번호, 회원등록코드, 아이디, 닉네임, 주민번호, 연락처, 이메일, 주소
CREATE OR REPLACE VIEW NEW_MEMBER_VIEW_B
AS
SELECT M.SEQ AS CODE
     , M.ID AS ID
     , M.NICK AS NICK
     , SUBSTR(M.SSN,1,6)||'-'||SUBSTR(M.SSN,7,1)||'******' AS SSN
     , M.PHONENUMBER AS TEL
     , M.EMAIL AS EMAIL
     , '['||M.ADDRNUMBER||'] '||M.ADDR1||' '||M.ADDR2||' '||M.ADDR3 AS ADDR
FROM MEMBER_REG M LEFT JOIN MEMBER_CODE MC
ON M.MEMBER_CODE_SEQ = MC.SEQ
WHERE TO_CHAR(MC.REGDATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY MC.SEQ DESC;

--● 신규 가입회원 목록 조회(newMemberList)
SELECT ROWNUM AS NUM, CODE, ID, NICK, SSN, TEL, EMAIL, ADDR
FROM NEW_MEMBER_VIEW_B;


--● 펫시터 신청 목록 뷰 생성
-- 펫시터신청코드, 회원고유코드, 아이디, 닉네임, 나이, 성별, 신청일, 심사결과, 처리일시, 처리담당, 자기소개
CREATE OR REPLACE VIEW PS_REQ_VIEW_B
AS
SELECT PSREQ.SEQ AS REQCODE
     , MC.SEQ AS CODE
     , MR.ID AS ID
     , MR.NICK AS NICK
     , CASE WHEN SUBSTR(SSN, 7, 1) IN(1,2)
            THEN EXTRACT(YEAR FROM SYSDATE) - (TO_NUMBER(SUBSTR(SSN, 1, 2)) + 1899)
            WHEN SUBSTR(SSN, 7, 1) IN(3,4)
            THEN EXTRACT(YEAR FROM SYSDATE) - (TO_NUMBER(SUBSTR(SSN, 1, 2)) + 1999)
       ELSE -1 END AS AGE
     , CASE WHEN SUBSTR(SSN, 7, 1) IN(1,3) THEN '남'
            WHEN SUBSTR(SSN, 7, 1) IN(2,4) THEN '여'
            ELSE '성별판독불가' END AS SEX
     , PSREQ.PSREQDATE AS REQDATE
     , CASE WHEN PSREG.PSREGDATE IS NOT NULL THEN '승인'
            WHEN PSREF.PSREGREFDATE IS NOT NULL THEN '반려'
       ELSE '처리하기' END AS STATE
     , PSREG.PSREGDATE AS APPROVAL_DATE
     , REG_MG.NICK AS APPROVAL_MG
     , PSREF.PSREGREFDATE AS DISAPPROVAL_DATE
     , REF_MG.NICK AS DISAPPROVAL_MG
     , PSREQ.PSCAREER AS CONTENT
FROM PS_REQ PSREQ LEFT JOIN MEMBER_CODE MC
ON PSREQ.MEMBER_CODE_SEQ = MC.SEQ
    LEFT JOIN MEMBER_REG MR
    ON MC.SEQ = MR.MEMBER_CODE_SEQ
        LEFT JOIN PS_REG PSREG
        ON PSREQ.SEQ = PSREG.PS_REQ_SEQ
            LEFT JOIN MANAGER REG_MG
            ON PSREG.MANAGER_SEQ = REG_MG.SEQ
                LEFT JOIN PS_REG_REF PSREF
                ON PSREQ.SEQ = PSREF.PS_REQ_SEQ
                    LEFT JOIN MANAGER REF_MG
                    ON PSREF.MANAGER_SEQ = REF_MG.SEQ
ORDER BY REQCODE
;

--● 펫시터 신청 목록 조회(petsitterRegList)
-- 행번호, 펫시터신청코드, 아이디, 닉네임, 나이, 신청일, 심사결과, 처리일시, 처리담당
SELECT ROWNUM AS NUM, REQCODE, ID, NICK, AGE, REQDATE, STATE, APPROVAL_DATE, APPROVAL_MG, DISAPPROVAL_DATE, DISAPPROVAL_MG
FROM PS_REQ_VIEW_B
--WHERE TO_CHAR(REQDATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY REQCODE DESC;


--● 회원 신고 접수 목록 뷰 생성
-- 접수코드, 아이디, 신고내용, 신고자ID, 신고일시, 처리결과, 제재처리일시, 제재처리담당, 반려처리일시, 반려처리담당
CREATE OR REPLACE VIEW MEMBER_REPORT_REG_VIEW_B
AS
SELECT MREPORT.SEQ AS CODE
     , MR2.ID AS DEFENDANTID
     , MR2.NICK AS NICK
     , RR.REPORT_REASON AS REASON
     , MR1.ID AS DECLARANTID
     , MREPORT.REG_DATE AS REPORT_DATE
     , CASE WHEN RES.COM_DATE IS NOT NULL THEN '승인' 
            WHEN REF.COM_DATE IS NOT NULL THEN '반려'
            ELSE '처리하기'
       END AS STATE
     , RES.COM_DATE AS REG_DATE
     , RESMG.NICK AS REG_MG
     , REF.COM_DATE AS REF_DATE
     , REFMG.NICK AS REF_MG
     , MREPORT.CONTENT AS CONTENT
FROM MEMBER_REPORT MREPORT JOIN MEMBER_CODE MC2
ON MREPORT.MEMBER_CODE_SEQ2=MC2.SEQ
    JOIN MEMBER_REG MR2
    ON MC2.SEQ = MR2.MEMBER_CODE_SEQ
        JOIN MEMBER_CODE MC1
        ON MREPORT.MEMBER_CODE_SEQ1=MC1.SEQ
            JOIN MEMBER_REG MR1
            ON MC1.SEQ = MR1.MEMBER_CODE_SEQ
                JOIN REPORT_REASON RR
                ON MREPORT.REPORT_REASON_SEQ = RR.SEQ
                    LEFT JOIN MEMBER_REPORT_RES RES
                    ON MREPORT.SEQ = RES.MEMBER_REPORT_SEQ
                        LEFT JOIN MEMBER_REPORT_REF REF
                        ON MREPORT.SEQ = REF.MEMBER_REPORT_SEQ
                            LEFT JOIN MANAGER RESMG
                            ON RES.MANAGER_SEQ = RESMG.SEQ
                                LEFT JOIN MANAGER REFMG
                                ON REF.MANAGER_SEQ = REFMG.SEQ
ORDER BY CODE
;

--● 회원 신고 접수 목록 조회(memberReportRegList)
SELECT ROWNUM AS NUM, CODE, DEFENDANTID, REASON, DECLARANTID, REPORT_DATE, STATE, REG_DATE, REG_MG, REF_DATE, REF_MG
FROM MEMBER_REPORT_REG_VIEW_B
--WHERE TO_CHAR(REPORT_DATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY CODE DESC
;

--● 게시글 신고 접수 목록 뷰 생성
-- 접수코드, 게시글코드, 작성자ID, 신고내용, 신고자ID, 신고일시, 처리결과, 제재처리일시, 제재처리담당, 반려처리일시, 반려처리담당
CREATE OR REPLACE VIEW BOARD_REPORT_REG_VIEW_B
AS
SELECT BREPORT.SEQ AS CODE
     , BREPORT.BOARD_SEQ AS BOARD_CODE
     , RR.SEQ AS REPORT_CODE
     , RR.REPORT_REASON AS REASON
     , DMR.ID AS DECLARANTID
     , BREPORT.REG_DATE AS REPORT_DATE
     , BREPORT.CONTENT AS CONTENT
     , CASE WHEN BLIND.COM_DATE IS NOT NULL THEN '승인' 
            WHEN REF.COM_DATE IS NOT NULL THEN '반려'
            ELSE '처리하기'
       END AS STATE
     , BLIND.COM_DATE AS BLIND_DATE
     , BLINDMG.NICK AS BLIND_MG
     , REF.COM_DATE AS REF_DATE
     , REFMG.NICK AS REF_MG
FROM BOARD_REPORT BREPORT JOIN MEMBER_CODE DMC
ON BREPORT.MEMBER_CODE_SEQ = DMC.SEQ
    JOIN MEMBER_REG DMR
    ON DMC.SEQ = DMR.MEMBER_CODE_SEQ
        JOIN REPORT_REASON RR
        ON BREPORT.REPORT_REASON_SEQ = RR.SEQ
            LEFT JOIN BOARD_REPORT_BLIND BLIND
            ON BREPORT.SEQ = BLIND.BOARD_REPORT_SEQ
                LEFT JOIN BOARD_REPORT_REF REF
                ON BREPORT.SEQ = REF.BOARD_REPORT_SEQ
                    LEFT JOIN MANAGER BLINDMG
                    ON BLIND.MANAGER_SEQ = BLINDMG.SEQ
                        LEFT JOIN MANAGER REFMG
                        ON REF.MANAGER_SEQ = REFMG.SEQ
ORDER BY CODE
;


--● 게시글 신고 접수 목록 조회(boardReportRegList)
SELECT ROWNUM AS NUM, CODE, BOARD_CODE, REASON, DECLARANTID, REPORT_DATE, STATE, BLIND_DATE, BLIND_MG, REF_DATE, REF_MG
FROM BOARD_REPORT_REG_VIEW_B
--WHERE TO_CHAR(REPORT_DATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY CODE DESC
;


--● 댓글 신고 접수 목록 뷰 생성
-- 접수코드, 댓글코드, 신고내용, 신고자ID, 신고일시, 처리결과, 제재처리일시, 제재처리담당, 반려처리일시, 반려처리담당
CREATE OR REPLACE VIEW REPLY_REPORT_REG_VIEW_B
AS
SELECT RREPORT.SEQ AS CODE
     , RREPORT.REPLY_SEQ AS REPLY_CODE
     , RR.SEQ AS REPORT_CODE
     , RR.REPORT_REASON AS REASON
     , DMR.ID AS DECLARANTID
     , RREPORT.REG_DATE AS REPORT_DATE
     , RREPORT.CONTENT AS CONTENT
     , CASE WHEN BLIND.COM_DATE IS NOT NULL THEN '승인' 
            WHEN REF.COM_DATE IS NOT NULL THEN '반려'
            ELSE '처리하기'
       END AS STATE
     , BLIND.COM_DATE AS BLIND_DATE
     , BLINDMG.NICK AS BLIND_MG
     , REF.COM_DATE AS REF_DATE
     , REFMG.NICK AS REF_MG
FROM REPLY_REPORT RREPORT JOIN MEMBER_CODE DMC
ON RREPORT.MEMBER_CODE_SEQ = DMC.SEQ
    JOIN MEMBER_REG DMR
    ON DMC.SEQ = DMR.MEMBER_CODE_SEQ
        JOIN REPORT_REASON RR
        ON RREPORT.REPORT_REASON_SEQ = RR.SEQ
            LEFT JOIN REPLY_REPORT_BLIND BLIND
            ON RREPORT.SEQ = BLIND.REPLY_REPORT_SEQ
                LEFT JOIN REPLY_REPORT_REF REF
                ON RREPORT.SEQ = REF.REPLY_REPORT_SEQ
                    LEFT JOIN MANAGER BLINDMG
                    ON BLIND.MANAGER_SEQ = BLINDMG.SEQ
                        LEFT JOIN MANAGER REFMG
                        ON REF.MANAGER_SEQ = REFMG.SEQ
ORDER BY CODE
;


--● 댓글 신고 접수 목록 조회(boardReportRegList)
SELECT ROWNUM AS NUM, CODE, REPLY_CODE, REASON, DECLARANTID, REPORT_DATE, STATE, BLIND_DATE, BLIND_MG, REF_DATE, REF_MG
FROM REPLY_REPORT_REG_VIEW_B
--WHERE TO_CHAR(REPORT_DATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY CODE DESC
;



--● 1:1 문의 접수 목록 뷰 생성
-- 문의코드, ID, 닉네임, 문의제목, 문의일시, 처리결과, 처리일시, 처리담당
CREATE OR REPLACE VIEW INQUIRY_REG_VIEW_B
AS
SELECT IQ.SEQ AS CODE
     , MC.SEQ AS MEMBER_CODE
     , MR.SEQ AS REGCODE
     , MR.ID AS ID
     , MR.NICK AS NICK
     , CASE WHEN SUBSTR(SSN, 7, 1) IN(1,2)
            THEN EXTRACT(YEAR FROM SYSDATE) - (TO_NUMBER(SUBSTR(SSN, 1, 2)) + 1899)
            WHEN SUBSTR(SSN, 7, 1) IN(3,4)
            THEN EXTRACT(YEAR FROM SYSDATE) - (TO_NUMBER(SUBSTR(SSN, 1, 2)) + 1999)
       ELSE -1 END AS AGE
     , IQ.TITLE AS TITLE
     , IQ.CONTENT AS CONTENT
     , IQ.REG_DATE AS REG_DATE
     , CASE WHEN ANS.SEQ IS NOT NULL THEN '처리완료'
            ELSE '처리하기'
       END AS STATE
     , ANS.REG_DATE AS COM_DATE
     , MG.NICK AS MG
     , ANS.CONTENT AS MGCONTENT
FROM INQUIRY IQ JOIN MEMBER_CODE MC
ON IQ.MEMBER_CODE_SEQ = MC.SEQ
    JOIN MEMBER_REG MR
    ON MC.SEQ = MR.MEMBER_CODE_SEQ
    LEFT JOIN INQUIRY_ANS ANS
        ON IQ.SEQ = ANS.INQUIRY_SEQ
            LEFT JOIN MANAGER MG
            ON ANS.MANAGER_SEQ = MG.SEQ
ORDER BY CODE
;


--● 1:1 문의 접수 목록 조회(boardReportRegList)
SELECT ROWNUM AS NUM, CODE, ID, NICK, TITLE, REG_DATE, STATE, COM_DATE, MG
FROM INQUIRY_REG_VIEW_B
--WHERE TO_CHAR(REG_DATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
ORDER BY CODE DESC
;

----------------------------------------------------------------------------------------
-- AdminLogin.jsp
SELECT *
FROM master;

--● 관리자 로그인 쿼리문 구성(adminLogin)
-- 매니저번호, 아이디, 비밀번호, 닉네임
SELECT SEQ
FROM MANAGER
WHERE ID = 'bokyung1'
AND PW = CRYPTPACK.ENCRYPT('bk1004', 'bk1004')
;


--● 마스터 로그인 쿼리문 구성(masterLogin)
-- 마스터번호, 아이디, 비밀번호
SELECT SEQ
FROM MASTER
WHERE ID = 'master'
AND PW = CRYPTPACK.ENCRYPT('mas1004', 'mas1004')
;

----------------------------------------------------------------------------------------
-- AdminMain.jsp 에서 디테일한 쿼리

--● 회원 상세 정보 뷰
-- 회원등록코드, 회원고유코드, 펫시터코드, 아이디, 닉네임, 생년월일, 성별, 
-- 연락처, 이메일, 주소, 회원가입일, 인기도, 펫시터 평점, 프로필사진경로
CREATE OR REPLACE VIEW USER_INFO_VIEW_B
AS
SELECT MR.SEQ AS REGCODE -- 회원등록코드
     , MC.SEQ AS CODE    -- 회원고유코드
     , (SELECT PS_CODE
        FROM
        (SELECT REG.SEQ AS PS_CODE
             , MC3.SEQ AS MEMBER_CODE
        FROM PS_REG REG LEFT JOIN PS_REQ REQ
        ON REG.PS_REQ_SEQ = REQ.SEQ
            LEFT JOIN MEMBER_CODE MC3
            ON REQ.MEMBER_CODE_SEQ = MC3.SEQ)
        WHERE MEMBER_CODE = MC.SEQ) AS PS_CODE --펫시터코드
     , MR.ID AS ID
     , MR.NICK AS NICK
     , CASE WHEN SUBSTR(MR.SSN, 7, 1) IN ('1','2')
            THEN '19'||SUBSTR(MR.SSN, 1, 2)||'-'||SUBSTR(MR.SSN, 3, 2)||'-'||SUBSTR(MR.SSN, 5, 2)
            WHEN SUBSTR(MR.SSN, 7, 1) IN ('3','4')
            THEN '20'||SUBSTR(MR.SSN, 1, 2)||'-'||SUBSTR(MR.SSN, 3, 2)||'-'||SUBSTR(MR.SSN, 5, 2)
            ELSE '잘못된주민번호'
            END AS BIRTHDAY
     , CASE WHEN SUBSTR(MR.SSN, 7, 1) IN ('1','3') THEN '남'
            WHEN SUBSTR(MR.SSN, 7, 1) IN ('2','4') THEN '여'
            ELSE '잘못된주민번호'
            END AS SEX
     , MR.PHONENUMBER AS TEL
     , MR.EMAIL AS EMAIL
     , '['||MR.ADDRNUMBER||'] '||MR.ADDR1||' '||MR.ADDR2||' '||MR.ADDR3 AS ADDR
     , MC.REGDATE AS REGDATE
     , (SELECT NVL(SUM(SCORE)/COUNT(*), 0)
        FROM WALK_SCORE_VIEW_B
        WHERE RECEIVER = MC.SEQ) AS AVG_SCORE -- 인기도
     , (SELECT NVL(SUM(SCORE)/COUNT(*), 0)
        FROM
        (SELECT RE.SID AS PS_PROFILE_CODE
             , PSSCORE AS SCORE
             , PRO.PS_REG_SEQ AS PS_REG_CODE
        FROM PETSITTER_REVIEW RE LEFT JOIN PS_PROFILE PRO
        ON RE.SID = PRO.SEQ)
        WHERE PS_REG_CODE=(SELECT PS_CODE
        FROM
        (SELECT REG.SEQ AS PS_CODE
             , MC3.SEQ AS MEMBER_CODE
        FROM PS_REG REG LEFT JOIN PS_REQ REQ
        ON REG.PS_REQ_SEQ = REQ.SEQ
            LEFT JOIN MEMBER_CODE MC3
            ON REQ.MEMBER_CODE_SEQ = MC3.SEQ)
        WHERE MEMBER_CODE = MC.SEQ)) AS PS_SCORE -- 펫시터 평점
     , (SELECT FILEPATH
        FROM
        (SELECT MEMBER_REG_SEQ, FILEPATH
        FROM MEMBER_PRO_IMG)
        WHERE MEMBER_REG_SEQ=MR.SEQ) AS FILEPATH-- 프로필사진경로
FROM MEMBER_REG MR LEFT JOIN MEMBER_CODE MC
ON MR.MEMBER_CODE_SEQ = MC.SEQ
;


--● 회원 상세 정보 조회 쿼리문 구성(userInfo)
SELECT REGCODE, CODE, PS_CODE, ID, NICK, BIRTHDAY, SEX, TEL, EMAIL, ADDR, REGDATE, AVG_SCORE, PS_SCORE, FILEPATH
FROM USER_INFO_VIEW_B
WHERE ID='haer524'
;


--● 산책 인기도 평가 뷰(평균인기도 구하는 용도)
-- 인기도평가코드, 평가한회원, 평가받은회원, 평가점수(인기도), 평가일
CREATE OR REPLACE VIEW WALK_SCORE_VIEW_B
AS
SELECT WS.SEQ AS CODE   -- 인기도평가코드
     , MC1.SEQ AS SENDER -- 평가한회원고유코드
     , MC2.SEQ AS RECEIVER  -- 평가받은회원고유코드
     , WS.SCORE AS SCORE    -- 인기도
     , WS.SCOREDATE AS REG_DATE -- 평가일
FROM WALK_SCORE WS LEFT JOIN WALK_JOIN WJ1  -- 평가한 사람
ON WS.WALK_JOIN_SEQ1 = WJ1.SEQ
    LEFT JOIN PET_CON_REG PCREG1
    ON WJ1.PET_CON_REG_SEQ = PCREG1.SEQ
        LEFT JOIN PET_CON_REQ PCREQ1
        ON PCREG1.PET_CON_REQ_SEQ = PCREQ1.SEQ
            LEFT JOIN MEMBER_CODE MC1
            ON PCREQ1.MEMBER_CODE_SEQ = MC1.SEQ
                LEFT JOIN WALK_JOIN WJ2  -- 평가받은 사람
                ON WS.WALK_JOIN_SEQ2 = WJ2.SEQ
                    LEFT JOIN PET_CON_REG PCREG2
                    ON WJ2.PET_CON_REG_SEQ = PCREG2.SEQ
                        LEFT JOIN PET_CON_REQ PCREQ2
                        ON PCREG2.PET_CON_REQ_SEQ = PCREQ2.SEQ
                            LEFT JOIN MEMBER_CODE MC2
                            ON PCREQ2.MEMBER_CODE_SEQ = MC2.SEQ;


--● 펫시터 신청 상세내용 조회 쿼리문 구성
-- 펫시터신청코드, 회원고유코드, 아이디, 닉네임, 나이, 성별, 신청일, 자기소개(경력소개)
SELECT REQCODE, CODE, ID, NICK, AGE, SEX, REQDATE, CONTENT
FROM PS_REQ_VIEW_B
WHERE REQCODE='PSREQ-000008'
;

--● 펫시터 신청 증빙서류 첨부내역 뷰
CREATE OR REPLACE VIEW PET_REQ_DOC_VIEW_B
AS
SELECT PD.PS_REQ_SEQ AS REQCODE
     , D.DOCUMENTNAME AS DOC_TYPE
     , PD.FILEPATH AS FILEPATH
FROM PS_DOCUMENT PD LEFT JOIN DOCUMENT D
ON PD.DOCUMENT_SEQ = D.SEQ;


--● 펫시터 신청 증빙서류 첨부내역 쿼리문 구성(psDocList)
SELECT REQCODE, DOC_TYPE, FILEPATH
FROM PET_REQ_DOC_VIEW_B
WHERE REQCODE = 'PSREQ-000039';


--● 펫시터 신청 승인 쿼리문 = 펫시터 등록 테이블 INSERT(psReqApproval)
-- 펫시터코드, 관리자코드, 펫시터신청코드, 등록일
INSERT INTO PS_REG
VALUES('PST-'||LPAD(PS_REG_SEQ.NEXTVAL,6,'0'), '매니저코드', '펫시터신청코드', SYSDATE);

--● 펫시터 신청 반려 쿼리문 = 펫시터 반려 등록 테이블 INSERT(psReqDisapproval)
INSERT INTO PS_REG_REF
VALUES('펫시터신청코드', '반려사유코드', SYSDATE, '반려사유', '매니저코드');

--● 펫시터 등록 반려 사유 코드 목록 조회 쿼리문(psRefReasonList)
SELECT SEQ, REASONNAME AS CONTENT
FROM PS_REF_REASON;

--● 펫시터 조회-승인처리 뷰
-- 펫시터신청코드, 펫시터신청일, 펫시터코드, 아이디, 닉네임, 나이, 성별, 처리일시, 담당자, 경력소개
CREATE OR REPLACE VIEW PET_REG_VIEW_B
AS
SELECT REQCODE, REQDATE
     , PR.SEQ AS REGCODE
     , V.ID, V.NICK, V.AGE, V.SEX
     , PR.PSREGDATE AS REGDATE
     , MG.NICK AS MGNICK
     , CONTENT
FROM PS_REQ_VIEW_B V LEFT JOIN PS_REG PR
ON V.REQCODE = PR.PS_REQ_SEQ
    LEFT JOIN MANAGER MG
    ON PR.MANAGER_SEQ = MG.SEQ;
    
    
--● 펫시터 조회-프로필 뷰
-- 펫시터프로필코드, 돌봄형태, 펫시터주소, 프로필공개여부
-- 프로필자기소개
-- 은행명, 예금주명, 계좌번호, 프로필작성일
CREATE OR REPLACE VIEW PET_PROFILE_VIEW_B
AS
SELECT PP.SEQ AS PROFILE_CODE-- 펫시터프로필코드
     , REQ.SEQ AS REQCODE -- 펫시터신청코드
     , REG.SEQ AS REGCODE -- 펫시터코드
     , PCT.TYPENAME AS CARE -- 돌봄형태
     , '['||PP.PSADDRNUMBER||']'||' '||PP.PSADDR1||' '||PP.PSADDR2||' '||PP.PSADDR3 AS PS_ADDR
     , PO.OPENOPTION AS OPEN_TYPE -- 프로필공개여부
     , PP.PSCONTENT AS CONTENT -- 프로필자기소개
     , B.BANKNAME AS BANK -- 은행명
     , PP.PSACCOUNTNAME AS DEPOSITOR -- 예금주명
     , PP.PSACCOUNTNUMBER AS ACCOUNT_NUM -- 계좌번호
     , PP.PSDATE AS WRITEDATE -- 프로필작성일
FROM PS_PROFILE PP LEFT JOIN PS_CARE_TYPE PCT
ON PP.PS_CARE_TYPE_SEQ = PCT.SEQ
    LEFT JOIN PS_OPEN PO
    ON PP.PS_OPEN_SEQ = PO.SEQ
        LEFT JOIN BANK B
        ON PP.BANK_SEQ = B.SEQ
            LEFT JOIN PS_REG REG
            ON PP.PS_REG_SEQ = REG.SEQ
                LEFT JOIN PS_REQ REQ
                ON REG.PS_REQ_SEQ = REQ.SEQ;

--● 펫시터 조회-승인처리 뷰 쿼리문 구성(psReg)
-- 펫시터신청코드, 신청일, 펫시터코드, 아이디, 닉네임, 나이, 성별, 승인일, 승인담당, 
SELECT REQCODE, REQDATE, REGCODE, ID, NICK, AGE, SEX
     , REGDATE AS APPROVAL_DATE
     , MGNICK AS APPROVAL_MG, CONTENT
FROM PET_REG_VIEW_B
WHERE REQCODE = 'PSREQ-000001';

--● 펫시터 조회-프로필 뷰 쿼리문 구성(psProfile)
-- 펫시터프로필코드, 펫시터신청코드, 돌봄형태, 펫시터주소, 공개여부, 내용, 은행, 예금주, 계좌번호, 작성일
SELECT PROFILE_CODE, REQCODE, REGCODE, CARE, PS_ADDR, OPEN_TYPE, CONTENT, BANK, DEPOSITOR, ACCOUNT_NUM, WRITEDATE
FROM PET_PROFILE_VIEW_B
WHERE REQCODE = 'PSREQ-000039';

--● 이용 가능 서비스(펫시터 승인 내역)(psServiceList)
SELECT PS.SERVICECONTENT AS SERVICE
FROM PS_SERVICE_INFO S LEFT JOIN PS_SERVICE PS
ON S.PS_SERVICE_SEQ = PS.SEQ
WHERE PS_PROFILE_SEQ = 'PSPRO-000037';

--● 돌봄환경이미지경로, 돌봄환경이미지등록일(펫시터 승인 내역)(psImgList)
SELECT FILEPATH, PSREGDATE AS REGDATE
FROM PS_IMG_REG
WHERE PS_PROFILE_SEQ = 'PSPRO-000037';

delete
from PS_reg
where seq='PSREG-000021';
commit;

--● 펫시터 조회-반려처리 뷰 구성
-- 펫시터신청코드, 신청일, 회원고유코드, 아이디, 닉네임, 나이, 성별, 경력소개
-- 거절일, 거절담당
CREATE OR REPLACE VIEW PET_REF_VIEW_B
AS
SELECT REQCODE, REQDATE
     , V.CODE AS CODE
     , V.ID, V.NICK, V.AGE, V.SEX
     , V.CONTENT
     , PR.PSREGREFDATE AS REFDATE
     , MG.NICK AS MGNICK
     , PRR.SEQ AS REF_REASON_CODE
     , PRR.REASONNAME AS REF_REASON
     , PR.PSREFCONTENT AS PSCONTENT
FROM PS_REQ_VIEW_B V LEFT JOIN PS_REG_REF PR
ON V.REQCODE = PR.PS_REQ_SEQ
    LEFT JOIN MANAGER MG
    ON PR.MANAGER_SEQ = MG.SEQ
        LEFT JOIN PS_REF_REASON PRR
        ON PR.PS_REF_REASON_SEQ = PRR.SEQ
WHERE V.DISAPPROVAL_DATE IS NOT NULL;

--● 펫시터 조회-반려처리 뷰 쿼리문 구성(psRef)
SELECT REQCODE, REQDATE, CODE, ID, NICK, AGE, SEX, CONTENT
     , REFDATE AS DISAPPROVAL_DATE, MGNICK AS DISAPPROVAL_MG
     , REF_REASON_CODE, REF_REASON, PSCONTENT
FROM PET_REF_VIEW_B
WHERE REQCODE = 'PSREQ-000008';


----------------------------------------------------------------------------------------------------------------
--● 회원 신고 접수 상세내역 조회 쿼리문 구성(usReportInfo)
-- 회원신고접수코드, 신고대상id, 닉네임, 신고일시, 사유, 신고한id, 상세내용, 첨부자료
SELECT CODE, DEFENDANTID, NICK, REASON, DECLARANTID, REPORT_DATE, STATE, REG_DATE, REG_MG, REF_DATE, REF_MG, CONTENT
FROM MEMBER_REPORT_REG_VIEW_B
WHERE CODE = 'MRPT-000003';

--● 회원 신고 접수 첨부파일 목록 쿼리문 구성(UsDocList)
SELECT MEMBER_REPORT_SEQ AS CODE, FILEPATH
FROM MEMBER_REPORT_FILE
WHERE MEMBER_REPORT_SEQ = 'MRPT-000003';

--● 회원 신고 승인 처리 쿼리문 구성(usReqApproval)
INSERT INTO MEMBER_REPORT_RES
VALUES('MRPR-'||LPAD(MEMBER_REPORT_RES_SEQ.NEXTVAL, 6, 0), 'MRPT-000003', SYSDATE, 'ㅇㅋ', 'MNG-000001');
             
--● 회원 신고 반려 처리 쿼리문 구성(usReqDisapproval)
-- 회원신고접수코드, 반려사유코드, 처리일시, 처리내용, 관리자코드
INSERT INTO MEMBER_REPORT_REF
VALUES(code, restrict_reason_code, SYSDATE, mscontent, mg_code);

--● 경고 회원 상세 내역-회원 신고 승인 내역(usReg)
-- 회원신고접수코드, 신고일, 신고당한id, 닉네임, 처리일, 신고사유, 신고한회원, 처리담당
-- 신고 상세내용, 첨부자료목록, 관리자 처리 내용
SELECT V.CODE, V.REPORT_DATE, V.DEFENDANTID, V.NICK, V.REG_DATE, V.REASON, V.DECLARANTID, V.REG_MG, V.CONTENT
     , RES.REASON AS MGCONTENT 
FROM MEMBER_REPORT_REG_VIEW_B V LEFT JOIN MEMBER_REPORT_RES RES
ON V.CODE=RES.MEMBER_REPORT_SEQ
WHERE CODE = 'MRPT-000002';

--● 회원 신고 제재불가 상세 내역-회원 신고 반려 내역(usRef)
-- 회원신고접수코드, 신고일, 신고당한id, 닉네임, 처리일, 신고사유, 신고한회원, 처리담당
-- 신고 상세내용, 첨부자료목록, 제재불가사유코드, 제재불가사유내용, 관리자 처리 내용
SELECT V.CODE AS CODE, V.REPORT_DATE AS REPORT_DATE, V.DEFENDANTID AS DEFENDANTID, V.NICK AS NICK
     , V.REF_DATE AS REF_DATE, V.REASON AS REASON, V.DECLARANTID AS DECLARANTID, V.REF_MG AS REF_MG, V.CONTENT AS CONTENT
     , REF.RESTRICT_REASON_SEQ AS RESTRICT_REASON_CODE, RR.CONTENT AS RESTRICT_REASON_CONTENT, REF.REASON AS MGCONTENT
FROM MEMBER_REPORT_REG_VIEW_B V LEFT JOIN MEMBER_REPORT_REF REF
ON V.CODE = REF.MEMBER_REPORT_SEQ
    LEFT JOIN RESTRICT_REASON RR
    ON REF.RESTRICT_REASON_SEQ = RR.SEQ
WHERE CODE = 'MRPT-000001';



----------------------------------------------------------------------------------------------------------------

--● 게시물 신고 접수 상세내역 조회 쿼리문 구성(contentsReportInfo)
-- 게시물신고접수코드, 신고일, 게시글코드, 게시글작성id, 닉네임, 신고사유, 신고회원id, 상세내용
-- 신고승인일, 승인담당, 신고거절일, 거절담당, 관리자처리내용, 제재불가사유코드, 제재불가사유내용
SELECT V.CODE AS CODE, V.REPORT_DATE AS REPORT_DATE, V.BOARD_CODE AS BOARD_CODE
     , MR.ID AS ID, MR.NICK AS NICK, V.REASON AS REASON
     , V.DECLARANTID AS DECLARANTID, V.CONTENT AS CONTENT
FROM BOARD_REPORT_REG_VIEW_B V LEFT JOIN BOARD B
ON V.BOARD_CODE = B.SEQ
    LEFT JOIN MEMBER_CODE MC
    ON B.MEMBER_CODE_SEQ = MC.SEQ
        LEFT JOIN MEMBER_REG MR
        ON MC.SEQ = MR.MEMBER_CODE_SEQ
WHERE V.CODE = 'BRPT-000001';

--● 게시물 신고 접수 승인(블라인드 처리)(contentsReqApproval)
INSERT INTO BOARD_REPORT_BLIND
VALUES(#{code}, SYSDATE, #{mgcontent}, #{mg_code});

delete
from BOARD_REPORT_BLIND
where board_report_seq = 'BRPT-000006';
commit;

--● 게시물 신고 접수 반려(contentsReqDisapproval)
INSERT INTO BOARD_REPORT_REF
VALUES(#{code}, #{restrict_reason_code}, SYSDATE, #{mgcontent}, #{mg_code});

delete
from BOARD_REPORT_REF
where board_report_seq = 'BRPT-000006';
commit;

--● 블라인드 게시물 상세 내역-게시물 신고 승인 내역 조회(contentsReg)
SELECT V.CODE AS CODE, V.REPORT_DATE AS REPORT_DATE, V.BOARD_CODE AS BOARD_CODE
     , MR.ID AS ID, MR.NICK AS NICK, V.REASON AS REASON
     , V.DECLARANTID AS DECLARANTID, V.CONTENT AS CONTENT, V.BLIND_DATE AS BLIND_DATE, V.BLIND_MG AS BLIND_MG
     , BR.CONTENT AS MGCONTENT
FROM BOARD_REPORT_REG_VIEW_B V LEFT JOIN BOARD B
ON V.BOARD_CODE = B.SEQ
    LEFT JOIN MEMBER_CODE MC
    ON B.MEMBER_CODE_SEQ = MC.SEQ
        LEFT JOIN MEMBER_REG MR
        ON MC.SEQ = MR.MEMBER_CODE_SEQ
            LEFT JOIN BOARD_REPORT BR
            ON V.CODE = BR.SEQ
                LEFT JOIN RESTRICT_REASON RR
                ON BR.REPORT_REASON_SEQ = RR.SEQ
WHERE V.CODE = 'BRPT-000005';

--● 게시물 신고 반려 내역 조회(contentsRef)
SELECT V.CODE AS CODE, V.REPORT_DATE AS REPORT_DATE, V.BOARD_CODE AS BOARD_CODE
     , MR.ID AS ID, MR.NICK AS NICK, V.REASON AS REASON
     , V.DECLARANTID AS DECLARANTID, V.CONTENT AS CONTENT, V.REF_DATE AS REF_DATE, V.REF_MG AS REF_MG
     , BR.CONTENT AS MGCONTENT, RR.SEQ AS RESTRICT_REASON_CODE, RR.CONTENT AS RESTRICT_REASON_CONTENT
FROM BOARD_REPORT_REG_VIEW_B V LEFT JOIN BOARD B
ON V.BOARD_CODE = B.SEQ
    LEFT JOIN MEMBER_CODE MC
    ON B.MEMBER_CODE_SEQ = MC.SEQ
        LEFT JOIN MEMBER_REG MR
        ON MC.SEQ = MR.MEMBER_CODE_SEQ
            LEFT JOIN BOARD_REPORT BR
            ON V.CODE = BR.SEQ
                LEFT JOIN RESTRICT_REASON RR
                ON BR.REPORT_REASON_SEQ = RR.SEQ
WHERE V.CODE = 'BRPT-000001';




--● 댓글 신고 접수 상세내역 조회 쿼리문 구성(replyReportInfo)
SELECT V.CODE AS CODE, V.REPORT_DATE AS REPORT_DATE, V.REPLY_CODE AS REPLY_CODE
     , MR.ID AS ID, MR.NICK AS NICK, V.REASON AS REASON
     , V.DECLARANTID AS DECLARANTID, V.CONTENT AS CONTENT
FROM REPLY_REPORT_REG_VIEW_B V LEFT JOIN REPLY R
ON V.REPLY_CODE = R.SEQ
    LEFT JOIN MEMBER_CODE MC
    ON R.MEMBER_CODE_SEQ = MC.SEQ
        LEFT JOIN MEMBER_REG MR
        ON MC.SEQ = MR.MEMBER_CODE_SEQ
WHERE V.CODE = 'RRPT-000001';

--● 댓글 신고 접수 승인(블라인드 처리)(replyReqApproval)
INSERT INTO REPLY_REPORT_BLIND
VALUES(#{code}, SYSDATE, #{mgcontent}, #{mg_code});

select *
from REPLY_REPORT;


--● 댓글 신고 접수 반려(replyReqDisapproval)
INSERT INTO REPLY_REPORT_REF
VALUES(#{code}, #{restrict_reason_code}, SYSDATE, #{mgcontent}, #{mg_code});

  
delete
from REPLY_REPORT_REF
where reply_report_seq = 'RRPT-000003';
commit;

--● 블라인드 댓글 상세 내역-댓글 신고 승인 내역 조회(replyReg)
SELECT V.CODE AS CODE, V.REPORT_DATE AS REPORT_DATE, V.REPLY_CODE AS REPLY_CODE
     , MR.ID AS ID, MR.NICK AS NICK, V.REASON AS REASON
     , V.DECLARANTID AS DECLARANTID, V.CONTENT AS CONTENT, V.BLIND_DATE AS BLIND_DATE, V.BLIND_MG AS BLIND_MG
     , RR.CONTENT AS MGCONTENT
FROM REPLY_REPORT_REG_VIEW_B V LEFT JOIN REPLY R
ON V.REPLY_CODE = R.SEQ
    LEFT JOIN MEMBER_CODE MC
    ON R.MEMBER_CODE_SEQ = MC.SEQ
        LEFT JOIN MEMBER_REG MR
        ON MC.SEQ = MR.MEMBER_CODE_SEQ
            LEFT JOIN REPLY_REPORT RR
            ON V.CODE = RR.SEQ
WHERE V.CODE = 'RRPT-000001';

--● 댓글 신고 반려 내역 조회(replyRef)
SELECT V.CODE AS CODE, V.REPORT_DATE AS REPORT_DATE, V.REPLY_CODE AS REPLY_CODE
     , MR.ID AS ID, MR.NICK AS NICK, V.REASON AS REASON
     , V.DECLARANTID AS DECLARANTID, V.CONTENT AS CONTENT, V.REF_DATE AS REF_DATE, V.REF_MG AS REF_MG
     , RR.CONTENT AS MGCONTENT, RESR.SEQ AS RESTRICT_REASON_CODE, RESR.CONTENT AS RESTRICT_REASON_CONTENT
FROM REPLY_REPORT_REG_VIEW_B V LEFT JOIN REPLY R
ON V.REPLY_CODE = R.SEQ
    LEFT JOIN MEMBER_CODE MC
    ON R.MEMBER_CODE_SEQ = MC.SEQ
        LEFT JOIN MEMBER_REG MR
        ON MC.SEQ = MR.MEMBER_CODE_SEQ
            LEFT JOIN REPLY_REPORT RR
            ON V.CODE = RR.SEQ
                LEFT JOIN RESTRICT_REASON RESR
                ON RR.REPORT_REASON_SEQ = RESR.SEQ
WHERE V.CODE = 'RRPT-000001';




--● 1:1 문의 접수 상세내역 조회 쿼리문 구성(inquiryDetail)
-- 문의접수코드, 회원고유코드, 회원등록코드, 아이디, 닉네임, 나이, 문의일시, 처리일시, 처리담당
-- 문의제목, 문의내용, 문의답변작성
SELECT CODE, MEMBER_CODE, REGCODE AS MEMBER_REG_CODE, ID, NICK, AGE
     , TITLE, CONTENT, REG_DATE
FROM INQUIRY_REG_VIEW_B
WHERE CODE = 'IQ-000002';

--● 1:1 문의 답변 처리 INSERT 쿼리문 구성(inquiryComplete)
INSERT INTO INQUIRY_ANS
VALUES('IQA-'||LPAD(INQUIRY_ANS_SEQ.NEXTVAL,6,0), #{code}, #{mg_code}, #{mgcontent}, SYSDATE);

--● 1:1 문의 답변 내역 조회 쿼리문 구성(inquiryAnswer)
SELECT CODE, MEMBER_CODE, REGCODE AS MEMBER_REG_CODE, ID, NICK, AGE
     , TITLE, CONTENT, REG_DATE, COM_DATE, MG, MGCONTENT
FROM INQUIRY_REG_VIEW_B
WHERE CODE = 'IQ-000002';





----------------------------------------------------------------------------------------------------------------

--● 자유게시판 게시글 리스트 조회 뷰
CREATE OR REPLACE VIEW BOARD_VIEW_B
AS
SELECT B.SEQ AS BOARD_CODE, B.HEAD_SEQ AS HEAD_CODE, H.HEAD AS HEAD
     , B.MEMBER_CODE_SEQ AS MEMBER_CODE, MR.NICK NICK
     , B.TITLE AS TITLE
     , B.CONTENT AS CONTENT
     , B.VIEW_NUM AS VIEW_NUM
     , B.RECOM_NUM AS HIT
     , CASE TO_DATE(B.REG_DATE, 'YYYY-MM-DD') WHEN TO_DATE(SYSDATE, 'YYYY-MM-DD')
                                              THEN TO_CHAR(B.REG_DATE, 'HH24:MI:SS')
                                              ELSE TO_CHAR(B.REG_DATE, 'YYYY-MM-DD') END AS REG_DATE
     , CASE WHEN (SYSDATE-B.REG_DATE)<1 THEN 1 
       ELSE 0 END AS DATE_CHECK
     , (SELECT COUNT(*)
        FROM
        (SELECT B.SEQ AS BOARD_CODE
         FROM BOARD_REPORT_BLIND BRB LEFT JOIN BOARD_REPORT BR
         ON BRB.BOARD_REPORT_SEQ = BR.SEQ
            LEFT JOIN BOARD B
            ON BR.BOARD_SEQ = B.SEQ)
        WHERE BOARD_CODE = B.SEQ) AS BLIND_COUNT
     , (SELECT COUNT(*)
        FROM
        (SELECT BOARD_CODE, BLIND_COUNT
        FROM REPLY_VIEW_B
        WHERE BLIND_COUNT = 0)
        WHERE BOARD_CODE = B.SEQ) AS REPLY_COUNT
FROM BOARD B LEFT JOIN HEAD H
ON B.HEAD_SEQ = H.SEQ
    LEFT JOIN MEMBER_CODE MC
    ON B.MEMBER_CODE_SEQ = MC.SEQ
        LEFT JOIN MEMBER_REG MR
        ON MC.SEQ = MR.MEMBER_CODE_SEQ;

--● 자유게시판 게시글 리스트 조회 쿼리문(boardList)
SELECT BOARD_CODE, HEAD, NICK, TITLE, VIEW_NUM, HIT, REG_DATE, DATE_CHECK
     , BLIND_COUNT
FROM BOARD_VIEW_B
WHERE BLIND_COUNT = 0
ORDER BY BOARD_CODE DESC;

--● 자유게시판 게시글 검색(search)
SELECT BOARD_CODE, HEAD_CODE, HEAD, NICK, TITLE, VIEW_NUM, HIT, REG_DATE, DATE_CHECK
     , BLIND_COUNT
FROM BOARD_VIEW_B
WHERE BLIND_COUNT = 0
AND TITLE LIKE '%ㅠㅠ%'
OR CONTENT LIKE '%ㅠㅠ%'
ORDER BY BOARD_CODE DESC;

--● 자유게시판 게시글 말머리 조건 검색(searchHead)
SELECT BOARD_CODE, HEAD_CODE, HEAD, NICK, TITLE, VIEW_NUM, HIT, REG_DATE, DATE_CHECK
     , BLIND_COUNT
FROM BOARD_VIEW_B
WHERE BLIND_COUNT = 0
AND HEAD_CODE = 3
AND TITLE LIKE '%나%'
ORDER BY BOARD_CODE DESC;

--● 말머리 목록(headList)
SELECT SEQ AS CODE, HEAD AS CONTENT
FROM HEAD;

--● 게시글 내용(content)
SELECT MEMBER_CODE, BOARD_CODE, HEAD_CODE, HEAD, TITLE, NICK, VIEW_NUM, HIT, REG_DATE, DATE_CHECK, CONTENT
FROM BOARD_VIEW_B;
WHERE BOARD_CODE = 'BOD-000003';


--● 댓글 조회 뷰
CREATE OR REPLACE VIEW REPLY_VIEW_B
AS
SELECT R.SEQ AS REPLY_CODE, R.MEMBER_CODE_SEQ AS MEMBER_CODE, MR.NICK AS NICK
     , R.REG_DATE AS REG_DATE, R.CONTENT AS CONTENT, R.BOARD_SEQ AS BOARD_CODE
     , (SELECT COUNT(*)
        FROM
        (SELECT R.SEQ AS REPLY_SEQ
        FROM REPLY_REPORT_BLIND RRB LEFT JOIN REPLY_REPORT RR
        ON RRB.REPLY_REPORT_SEQ = RR.SEQ
            LEFT JOIN REPLY R
            ON RR.REPLY_SEQ = R.SEQ)
        WHERE REPLY_SEQ = R.SEQ) AS BLIND_COUNT
FROM REPLY R LEFT JOIN MEMBER_CODE MC
ON R.MEMBER_CODE_SEQ = MC.SEQ
    LEFT JOIN MEMBER_REG MR
    ON MC.SEQ = MR.MEMBER_CODE_SEQ;

--● 댓글 리스트 출력(replyList)
SELECT REPLY_CODE, MEMBER_CODE, NICK, REG_DATE, CONTENT, BOARD_CODE, BLIND_COUNT
FROM REPLY_VIEW_B
WHERE BOARD_CODE = 'BOD-000016'
AND BLIND_COUNT = 0
ORDER BY REPLY_CODE;

--● 댓글 수 조회
SELECT COUNT(*)
FROM REPLY_VIEW_B
WHERE BOARD_CODE = 'BOD-000016'
AND BLIND_COUNT = 0;


--● 댓글 입력(replyInsert)
INSERT INTO REPLY
VALUES('REP-'||LPAD(REPLY_SEQ.NEXTVAL,6,0), #{member_code}, #{board_code}, SYSDATE, #{content});

--● 게시글 입력(contentInsert)
INSERT INTO BOARD
VALUES('BOD-'||LPAD(BOARD_SEQ.NEXTVAL,6,0), #{head_code}, #{member_code}, #{title}, #{content}, SYSDATE, 0, 0);

--● 게시글 수정(contentUpdate)
UPDATE BOARD
SET HEAD_SEQ = #{head_code}, TITLE = #{title}, CONTENT = #{content}
WHERE SEQ = #{board_code};

--● 게시글 삭제(contentDelete)
DELETE
FROM BOARD
WHERE SEQ = #{board_code}



--● 게시글 조회수 증가(hitUpdate)
UPDATE BOARD
SET VIEW_NUM = VIEW_NUM + 1
WHERE SEQ = #{board_code};

--● 회원 알림 뷰 구성
-- 알림코드, 받는회원등록코드, 닉네임, 받는회원고유코드, 알림타입, 내용, 발송일, 수신확인일
CREATE OR REPLACE VIEW NOTIFY_VIEW_B
AS
SELECT N.SEQ AS NO_CODE
     , MR.SEQ AS MEMBER_REG_CODE
     , MR.MEMBER_CODE_SEQ AS CODE
     , MR.NICK AS NICK
     , NT.SEQ AS NOTIFY_TYPE_CODE
     , NT.CONTENT AS CONTENT
     , NT.URL AS URL
     , NT.URL_NAME AS URL_NAME
     , N.REFERENCE_CODE AS REFERENCE_CODE
     , N.WRITE_DATE AS REG_DATE
     , N.CHECK_DATE AS CHECK_DATE
FROM NOTIFY N LEFT JOIN MEMBER_REG MR
ON N.MEMBER_REG_SEQ = MR.SEQ
    LEFT JOIN NOTIFY_TYPE NT
    ON N.NOTIFY_TYPE_SEQ = NT.SEQ;
    
--● 알림 조회 쿼리문 구성(newNotifyList)
SELECT NO_CODE, MEMBER_REG_CODE, CODE, NICK, NOTIFY_TYPE_CODE, CONTENT, URL_NAME, URL, REFERENCE_CODE, REG_DATE, CHECK_DATE
FROM NOTIFY_VIEW_B
WHERE CODE = 'MEM-000001'
AND CHECK_DATE IS NULL
;

--● 알림 전송 쿼리문 구성(notifyInsert)
INSERT INTO NOTIFY(SEQ, MEMBER_REG_SEQ, NOTIFY_TYPE_SEQ, WRITE_DATE)
VALUES('NTF='||LPAD(NOTIFY_SEQ.NEXTVAL,6,0), 'MBR-000001', 'NO-000003', SYSDATE)
;

--● 펫시터 신청 코드로 신청한 회원등록코드, 회원고유코드 조회(psReqMember)
SELECT MC.SEQ, MR.SEQ AS MEMBER_REG_CODE
FROM PS_REQ PR LEFT JOIN MEMBER_CODE MC
ON PR.MEMBER_CODE_SEQ = MC.SEQ
    LEFT JOIN MEMBER_REG MR
    ON MC.SEQ = MR.MEMBER_CODE_SEQ
WHERE PR.SEQ = 'PSREQ-000001';

--● 세션의 회원고유코드로 회원등록코드 조회
SELECT MR.SEQ AS MEMBER_REG_CODE
FROM MEMBER_REG MR LEFT JOIN MEMBER_CODE MC
ON MR.MEMBER_CODE_SEQ = MC.SEQ
WHERE MC.SEQ = 'MEM-000001';

--● 알림 전송 쿼리문 구성(notifyInsert)
INSERT INTO NOTIFY(SEQ, MEMBER_REG_SEQ, NOTIFY_TYPE_SEQ, WRITE_DATE)
VALUES('NTF='||LPAD(NOTIFY_SEQ.NEXTVAL,6,0), 'MBR-000001', 'NO-000003', SYSDATE);

--● 읽은 알람의 수신일 변경
UPDATE NOTIFY
SET CHECK_DATE = SYSDATE
WHERE SEQ = #{no_code};


--● 펫 연결 신청 시 신청된 펫 연결 코드 조회(searchPetConReqCode)
SELECT SEQ AS PET_CON_REQ_SEQ
FROM PET_CON_REQ
WHERE PET_REG_SEQ = '펫연결코드'
AND MEMBER_CODE_SEQ = '신청받은사람회원고유코드';

--● 펫 연결 요청 알림 수락 시 펫연결등록 insert 쿼리문 구성
INSERT INTO PET_CON_REG
VALUES('PREG-'||LPAD(PET_CON_REG_SEQ.NEXTVAL,6,0), #{pet_con_req_seq}, SYSDATE);

--● 펫연결신청코드 조회 쿼리문 구성
SELECT * --SEQ AS PET_CON_REQ_SEQ
FROM PET_CON_REQ
WHERE MEMBER_CODE_SEQ = 'MEM-000001';


INSERT INTO NOTIFY(SEQ, MEMBER_REG_SEQ, NOTIFY_TYPE_SEQ, WRITE_DATE, REFERENCE_CODE)
VALUES('NTF'||LPAD(NOTIFY_SEQ.NEXTVAL,6,0), #{member_reg_code}, #{notify_type_code}, SYSDATE, #{reference_code})
;
update NOTIFY
set seq='NTF-000007'
where seq='NTF=000007';
select *
from NOTIFY;

select *
from PET_CON_REG
order by 1 desc;
delete from PET_CON_REG where 
select *
from pet_con_req
order by 1 desc;

select *
from notify;
select *
from notify_type;
/*
NO-000002	펫시터 신청이 승인되었습니다.<br>프로필을 작성해주세요.<br>
NO-000003	펫시터 신청이 반려되었습니다.<br>
NO-000004	돌봄 신청이 승인되었습니다.<br>1시간 내에 예치금을 입금해주세요.<br>
NO-000005	돌봄 예약이 접수되었습니다.<br>
NO-000001	펫시터 공유 요청이 있습니다.<br>
*/


UPDATE NOTIFY_TYPE
SET CONTENT= '펫시터 신청이 승인되었습니다.<br>프로필을 작성해주세요.<br>'
    , URL_NAME = '프로필 작성하기'
WHERE SEQ='NO-000002';
UPDATE NOTIFY_TYPE
SET CONTENT= '펫시터 신청이 반려되었습니다.<br>'
    , URL_NAME = '사유 확인하기'
WHERE SEQ='NO-000003';
UPDATE NOTIFY_TYPE
SET CONTENT= '돌봄 신청이 승인되었습니다.<br>1시간 내에 예치금을 입금해주세요.<br>'
    , URL_NAME = '예치금 입금하기'
WHERE SEQ='NO-000004';
UPDATE NOTIFY_TYPE
SET CONTENT= '돌봄 예약이 접수되었습니다.<br>'
    , URL_NAME = '예약내역 확인하기'
WHERE SEQ='NO-000005';
UPDATE NOTIFY_TYPE
SET CONTENT= '펫 공유 요청이 있습니다.<br>'
    , URL_NAME = '요청 수락'
WHERE SEQ='NO-000001';

SELECT *
FROM BOARD;
COMMIT;
select *
from board;

DELETE
FROM REPLY
WHERE SEQ = 'REP-000016';

SELECT *
FROM BOARD_VIEW_B;





